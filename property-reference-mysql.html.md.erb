---
title: Property Reference for the MySQL Resource
owner: MySQL
---

<strong><%= modified_date %></strong>

This topic contains a property reference table for the MySQL resource.
Refer to this table when you are creating the YAML file for a MySQL instance.
For more information, see [Create a Mysql Instance](create-delete-mysql.html#create-instance) in
_Creating and Deleting a MySQL Instance_.

The table below explains the properties that you can set in your MySQL resource.

<table class="nice">
<col width="20%">
<col width="60%">
<col width="20%">
<th>Property</th>
<th>Information</th>
<th>Example</th>
<tr>
  <td><code>metadata.name</code></td>
  <td>The name of the MySQL instance. Must be unique within a namespace. Cannot be updated. For more information, see the <a href="http://kubernetes.io/docs/user-guide/identifiers#names">Kubernetes documentation</a>.<br /><br />
  Type: String. Required. Default: <em>n/a</em>.
      </td>
  <td><code>my&#8209;instance</code></td>
</tr>
<tr>
  <td><code>spec.storageSize</code></td>
  <td>The size of the persistent volume claims (PVCs) for MySQL instance Pods.
      For information about allowed size units, see discussion about resource quantities in
      the <a href="https://github.com/kubernetes/community/blob/master/contributors/design-proposals/scheduling/resources.md#resource-quantities">
      kubernetes / community</a> GitHub repository.<br /><br />
      Type: Resource quantity.  Required. Default: <em>n/a</em>.
  </td>
  <td><code>50Gi</code></td>
</tr>
<tr>
  <td><code>spec.imagePullSecret</code></td>
  <td>An existing Kubernetes docker-registry secret that can access the
  registry containing the MySQL image.<br /><br />
  Type: String. Required. Default: <em>n/a</em>.</td>
  <td><code>tanzu-mysql-image-registry</code></td>
</tr>
<tr>
  <td><code>spec.storageClassName</code></td>
  <td>The StorageClass used for PVCs associated with MySQL instance Pods.
      For available types, contact your Kubernetes admin.
      For information about the StorageClass concept, see the
      <a href="https://kubernetes.io/docs/concepts/storage/storage-classes/">
      Kubernetes documentation</a>.<br /><br />
    Type: String. Optional. Default: Standard.</td>
  <td><code>standard</code></td>
</tr>
<tr>
  <td><code>spec.serviceType</code></td>
  <td>The type of Service used to provide access to the MySQL database.
      Only <code>ClusterIP</code> and <code>LoadBalancer</code> are supported.
      For more information about Kubernetes ServiceTypes, see the
      <a href="https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types">
      Kubernetes documentation</a>.<br /><br />
  Type: String. Optional. Default: ClusterIP.</td>
  <td><code>LoadBalancer</code></td>
</tr>
<tr>
  <td><code>spec.tls.secret.name</code></td>
  <td>The name of the Kubernetes secret containing the TLS certificate and private key used to support encrypted connections by clients.<br /><br />
  Type: String. Optional. Default: <em>n/a</em>.</td>
  <td><code>mysql-tls-secret</code></td>
</tr>
<tr>
  <td><code>spec.highAvailability.enabled</code></td>
  <td>
  Whether the instance is a high-availability cluster (not single-node).
  For information about high availability, see <a href="high-availability.html">Configuring MySQL Instances for High Availability</a>.<br /><br />
  Type: Boolean. Optional. Default: False.</td>
  <td><code>highAvailability.enabled: false</code></td>
</tr>
<tr>
  <td><code>spec.resources.mysql</code></td>
  <td>
  The maximum CPU and memory allowed for the MySQL container.
      If not specified, Kubernetes does its best effort to allocate necessary compute resources
      for this container.
      For more information about managing resources for containers,
      see the <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">
      Kubernetes documentation</a>.<br /><br />
  Type: limits.cpu, limits.memory. Optional. Default: Best effort.</td>
  <td><code>limits.cpu: 3 , limits.memory: 800Mi</code></td>
</tr>
<tr>
  <td><code>spec.resources.mysql</code></td>
  <td>
  The minimum CPU and memory allowed for the MySQL container.
      If not specified, defaults to limits, if limits have been explicitly specified.
      For more information about limits, see the
      <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">
      Kubernetes documentation</a>.<br /><br />
  Type: requests.cpu, requests.memory. Optional. Default: Best effort.</td>
  <td><code>requests.cpu: 2 , requests.memory: 500Mi</code></td>
</tr>
<tr>
  <td><code>spec.resources.mysqlSidecar</code></td>
  <td>The maximum CPU and memory allowed for the mysql-sidecar container.
      If not specified, Kubernetes does its best effort to allocate the necessary compute resources
      for this container.
      For more information about CPU and memory resources,
      see the <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">
      Kubernetes documentation</a>.<br /><br /> 
  Type: limits.cpu, limits.memory.Optional. Default: Best effort.</td>
  <td><code>limits.cpu: 2 , limits.memory: 500Mi</code></td>
</tr>
<tr>
  <td><code>spec.resources.mysqlSidecar</code></td>
  <td>Describes the minimum CPU and memory allowed for the mysql-sidecar container.
      If left blank, defaults to limits, if limits have been explicitly specified.
      For more information about limits, see the
      <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">
      Kubernetes documentation</a>.<br /><br />
      Type: requests.cpu, requests.memory. Optional. Default: Best effort.</td>
  <td><code>requests.cpu:&nbsp;1&nbsp;, requests.memory:&nbsp;200Mi</code>
  </td>
</tr>
<tr>
  <td><code>spec.resources.proxy</code></td>
  <td>Describes the maximum CPU and memory allowed for the proxy container. This container is only created if
      <code>spec.highAvailability.enabled</code> is <code>true</code>.
      If not specified, Kubernetes does its best effort to allocate the necessary compute resources
      for the proxy container.
      For more information about CPU and memory resources,
      see the <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">
      Kubernetes documentation</a>.<br /><br />
    Type: limits.cpu, limits.memory. Optional. Default: Best effort.</td>
  <td><code>limits.cpu: 1000m, limits.memory: 256Mi</code></td>
</tr>
<tr>
  <td><code>spec.resources.proxy</code></td>
  <td>Describes the minimum CPU and memory allowed for the proxy container. This container is only created if
      <code>spec.highAvailability.enabled</code> is <code>true</code>.
      If not specified, defaults to limits, if limits have been explicitly specified.
      For more information about limits, see the
      <a href="https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/">
      Kubernetes documentation</a>.<br /><br />
  Type: requests.cpu, requests.memory. Optional. Default: Best effort.</td>
  <td><code>requests.cpu: 200m;, requests.memory: 48Mi</code>
  </td>
</tr>
</table>
